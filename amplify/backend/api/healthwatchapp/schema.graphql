type HealthDataUser @model @auth(rules: [{ allow: owner }]) {
  id: ID!
  useruuID: String!
  age: String
  weight: String
  height: String
  sex: String
  smartwatch: String
  opt_out: Boolean!
  signedUp: AWSDateTime!
  lastSignedIn: AWSDateTime!
  lastRefreshed: AWSDateTime!
  symptomPts: [SymptomPt] @connection(keyName: "byHealthDataUser", fields: ["id"])
  illnessPts: [IllnessPt] @connection(keyName: "byHealthDataUser", fields: ["id"])
  alcConsumptionPts: [AlcConsumptionPt] @connection(keyName: "byHealthDataUser", fields: ["id"])
  wifiPts: [WifiPt] @connection(keyName: "byHealthDataUser", fields: ["id"])
}

type SymptomPt @model @auth(rules: [{ allow: owner }])
@key(name: "byHealthDataUser", fields: ["healthdatauserID"]) {
  id: ID!
  healthdatauserID: ID!
  loggedSymptom: String!
  loggedDate: AWSDate!
  }  

type IllnessPt @model @auth(rules: [{ allow: owner }])
@key(name: "byHealthDataUser", fields: ["healthdatauserID"]) {
  id: ID!
  healthdatauserID: ID!
  loggedIllness: String!
  loggedIllnessDiagnosis: String!
  loggedDate: AWSDate!
  }  

type AlcConsumptionPt @model @auth(rules: [{ allow: owner }])
@key(name: "byHealthDataUser", fields: ["healthdatauserID"]) {
  id: ID!
  healthdatauserID: ID!
  loggedAlcConsumptionPt: String!
  loggedUnitsConsumed: Float
  loggedDateTime: AWSDateTime
  }

  type WifiPt @model @auth(rules: [{ allow: owner }])
  @key(name: "byHealthDataUser", fields: ["healthdatauserID"]) {
  id: ID!
  healthdatauserID: ID!
  loggedWifiIP: String
  loggedDate: AWSDateTime
  }  